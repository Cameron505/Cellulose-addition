library(tidyverse) #for tidy processing and plotting
library(vegan) # for PERMANOVA analysis
library(ggbiplot) #for PCA biplots
# custom ggplot theme
theme_kp <- function() {  # this for all the elements common across plots
theme_bw() %+replace%
theme(legend.position = "top",
legend.key=element_blank(),
legend.title = element_blank(),
legend.text = element_text(size = 12),
legend.key.size = unit(1.5, 'lines'),
legend.background = element_rect(colour = NA),
panel.border = element_rect(color="black",size=1.5, fill = NA),
plot.title = element_text(hjust = 0, size = 14),
axis.text = element_text(size = 14, color = "black"),
axis.title = element_text(size = 14, face = "bold", color = "black"),
# formatting for facets
panel.background = element_blank(),
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
panel.spacing.y = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold", angle = 270) #facet labels
)
}
EZ = read.csv("data/Enzyme_activity.csv")
EZ = read.csv("Data/Enzyme_activity.csv")
EZ = read.csv("Data/Enzyme.csv")
View(EZ)
names(EZ)
EZ2<- melt(EZ, id.vars=c("ID","Date","Add","Temp"))
library(reshape2)
EZ2<- melt(EZ, id.vars=c("ID","Date","Add","Temp"))
View(EZ2)
View(EZ)
View(EZ2)
library(ggplot2)
install.packages("dplyr")
library(ggplot2)
install.packages(c("BH", "BiocManager", "brew", "brio", "broom", "bslib", "cachem", "car", "carData", "checkmate", "cli", "clipr", "colorspace", "commonmark", "conquer", "corrplot", "cpp11", "credentials", "crosstalk", "crul", "data.table", "DBI", "desc", "devtools", "diffobj", "digest", "dplyr", "DT", "e1071", "evaluate", "fansi", "fs", "gert", "ggplot2", "ggsignif", "glue", "haven", "Hmisc", "hms", "htmlTable", "htmltools", "httpuv", "httr", "igraph", "jpeg", "jsonlite", "knitr", "labelled", "lme4", "lubridate", "magrittr", "maps", "maptools", "matrixStats", "memoise", "minpack.lm", "multcomp", "mvtnorm", "nloptr", "oce", "openxlsx", "pander", "permute", "pkgbuild", "pkgload", "PKNCA", "plotly", "plyr", "polynom", "pracma", "processx", "ps", "quantreg", "rcmdcheck", "RColorBrewer", "Rcpp", "RcppArmadillo", "RcppEigen", "readr", "readxl", "remotes", "renv", "reshape", "rio", "rmarkdown", "Rmisc", "rprojroot", "s2", "sass", "scales", "seacarb", "segmented", "sessioninfo", "sf", "sfsmisc", "shiny", "shinyBS", "shinyjs", "shinyWidgets", "sp", "stringi", "testthat", "TH.data", "tibble", "tidyr", "tinytex", "units", "usethis", "utf8", "uuid", "vctrs", "vegan", "viridis", "visNetwork", "waldo", "withr", "wk", "xfun", "xml2", "yaml", "zoo"))
library(ggplot2)
source("code/0-packages.R")
install.packages("tidyverse")
source("code/0-packages.R")
install.packages("vegan")
source("code/0-packages.R")
install.packages("ggbiplot")
source("code/0-packages.R")
EZ = read.csv("Data/Enzyme.csv")
EZ2<- melt(EZ, id.vars=c("ID","Date","Add","Temp"))
ggplot(EZ2,aes(x = Temp, y = value, fill = Add))+
geom_bar(stat = "identity")+
facet_grid(~variable)+
theme_kp()
install.packages("reshape2")
EZ2<- melt(EZ, id.vars=c("ID","Date","Add","Temp"))
library(reshape2)
library(reshape2)
EZ2<- melt(EZ, id.vars=c("ID","Date","Add","Temp"))
ggplot(EZ2,aes(x = Temp, y = value, fill = Add))+
geom_bar(stat = "identity")+
facet_grid(~variable)+
theme_kp()
# custom ggplot theme
theme_kp <- function() {  # this for all the elements common across plots
theme_bw() %+replace%
theme(legend.position = "top",
legend.key=element_blank(),
legend.title = element_blank(),
legend.text = element_text(size = 12),
legend.key.size = unit(1.5, 'lines'),
legend.background = element_rect(colour = NA),
panel.border = element_rect(color="black",size=1.5, fill = NA),
plot.title = element_text(hjust = 0, size = 14),
axis.text = element_text(size = 14, color = "black"),
axis.title = element_text(size = 14, face = "bold", color = "black"),
# formatting for facets
panel.background = element_blank(),
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
panel.spacing.y = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold", angle = 270) #facet labels
)
}
ggplot(EZ2,aes(x = Temp, y = value, fill = Add))+
geom_bar(stat = "identity")+
facet_grid(~variable)+
theme_kp()
ggplot(EZ2,aes(x = Temp, y = value, fill = Temp))+
geom_bar(stat = "identity")+
facet_grid(~variable)+
theme_kp()
ggplot(EZ2,aes(x = Temp, y = value))+
geom_bar(stat = "identity")+
facet_grid(~variable)+
theme_kp()
EZ2$Temp<- as.character(EZ2$Temp)
ggplot(EZ2,aes(x = Temp, y = value))+
geom_bar(stat = "identity")+
facet_grid(~variable)+
theme_kp()
EXAFS<- EZ[variable="AFS",]
EXAFS<- EZ[EZ$variable="AFS",]
ggplot(EZ2,aes(x = Temp, y = value))+
geom_bar(stat = "identity")+
facet_grid(~variable,rows=4, cols = 3)+
theme_kp()
ggplot(EZ2,aes(x = Temp, y = value))+
geom_bar(stat = "identity")+
facet_grid(~variable)+
theme_kp()
ggplot(EZ2,aes(x = Temp, y = value))+
geom_bar(stat = "identity")+
facet_wrap(~ variable, ncol = 3)+
theme_kp()
ggplot(EZ2,aes(x = Temp, y = value))+
geom_bar(stat = "identity")+
facet_wrap(~ variable, ncol = 3,scales = "free")+
theme_kp()
EZ2$Temp<- as.character(EZ2$Temp, levels= c("-6","-2","2","6","10","4"))
ggplot(EZ2,aes(x = Temp, y = value))+
geom_bar(stat = "identity")+
facet_wrap(~ variable, ncol = 3,scales = "free")+
theme_kp()
EZ2$Temp<- as.factor(EZ2$Temp, levels= c("-6","-2","2","6","10","4"))
EZ2$Temp<- factor(EZ2$Temp, levels= c("-6","-2","2","6","10","4"))
ggplot(EZ2,aes(x = Temp, y = value))+
geom_bar(stat = "identity")+
facet_wrap(~ variable, ncol = 3,scales = "free")+
theme_kp()
A<-rnorm(20, mean=.26, sd=0.1)
B<-rnorm(24, mean=.5, sd=0.12)
C<-rnorm(24, mean=.48, sd=0.08)
D<-rnorm(20, mean=.89, sd=0.2)
E<-rnorm(20, mean=.9, sd=0.16)
df<-data.frame(A,B,C,D,E)
A<-rnorm(24, mean=.26, sd=0.1)
D<-rnorm(24, mean=.89, sd=0.2)
E<-rnorm(24, mean=.9, sd=0.16)
df<-data.frame(A,B,C,D,E)
A<-rnorm(24, mean=.26, sd=0.1)
E<-rnorm(24, mean=.9, sd=0.16)
D<-rnorm(24, mean=.89, sd=0.2)
C<-rnorm(24, mean=.48, sd=0.08)
B<-rnorm(24, mean=.5, sd=0.12)
df<-data.frame(A,B,C,D,E)
getwd()
write.csv(df, "C:\\Users\\cmcmill5\\Desktop\\data.csv", row.names=FALSE)
write.csv(df, row.names=FALSE)
write.csv(df, "Data/data.csv",row.names=FALSE)
EZ = read.csv("Data/Enzyme.csv")
A<-rnorm(24, mean=.15, sd=0.1)
B<-rnorm(24, mean=.14, sd=0.12)
C<-rnorm(24, mean=.38, sd=0.08)
D<-rnorm(24, mean=.39, sd=0.12)
E<-rnorm(24, mean=.7, sd=0.16)
df<-data.frame(A,B,C,D,E)
write.csv(df, "Data/data2.csv",row.names=FALSE)
EZ = read.csv("Data/Enzyme.csv")
EZ2<- melt(EZ, id.vars=c("ID","Date","Add","Temp"))
library(reshape2)
EZ2<- melt(EZ, id.vars=c("ID","Date","Add","Temp"))
EZ2$Temp<- factor(EZ2$Temp, levels= c("-6","-2","2","6","10","4"))
ggplot(EZ2,aes(x = Temp, y = value))+
geom_bar(stat = "identity")+
facet_wrap(~ variable, ncol = 3,scales = "free")+
theme_kp()
library(ggplot2)
ggplot(EZ2,aes(x = Temp, y = value))+
geom_bar(stat = "identity")+
facet_wrap(~ variable, ncol = 3,scales = "free")+
theme_kp()
# custom ggplot theme
theme_kp <- function() {  # this for all the elements common across plots
theme_bw() %+replace%
theme(legend.position = "top",
legend.key=element_blank(),
legend.title = element_blank(),
legend.text = element_text(size = 12),
legend.key.size = unit(1.5, 'lines'),
legend.background = element_rect(colour = NA),
panel.border = element_rect(color="black",size=1.5, fill = NA),
plot.title = element_text(hjust = 0, size = 14),
axis.text = element_text(size = 14, color = "black"),
axis.title = element_text(size = 14, face = "bold", color = "black"),
# formatting for facets
panel.background = element_blank(),
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
panel.spacing.y = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold", angle = 270) #facet labels
)
}
ggplot(EZ2,aes(x = Temp, y = value))+
geom_bar(stat = "identity")+
facet_wrap(~ variable, ncol = 3,scales = "free")+
theme_kp()
ggplot(EZ2,aes(x = Temp, y = value))+
geom_bar()+
facet_wrap(~ variable, ncol = 3,scales = "free")+
theme_kp()
ggplot(EZ2,aes(x = Temp, y = value), color=Add)+
geom_bar(stat = "identity")+
facet_wrap(~ variable, ncol = 3,scales = "free")+
theme_kp()
ggplot(EZ2,aes(x = Temp, y = value, color=Add))+
geom_bar(stat = "identity")+
facet_wrap(~ variable, ncol = 3,scales = "free")+
theme_kp()
ggplot(EZ2,aes(x = Temp, y = value, fill=Add))+
geom_bar(stat = "identity")+
position_dodge()+
facet_wrap(~ variable, ncol = 3,scales = "free")+
theme_kp()
ggplot(EZ2,aes(x = Temp, y = value, fill=Add))+
geom_bar(stat = "identity", position="dodge")+
position_dodge()+
facet_wrap(~ variable, ncol = 3,scales = "free")+
theme_kp()
ggplot(EZ2,aes(x = Temp, y = value, fill=Add))+
geom_bar(stat = "identity")+
position_dodge()+
facet_wrap(~ variable, ncol = 3,scales = "free")+
theme_kp()
ggplot(EZ2,aes(x = Temp, y = value, fill=Add))+
geom_bar(stat = "identity", position="dodge")+
facet_wrap(~ variable, ncol = 3,scales = "free")+
theme_kp()
ggplot(EZ2,aes(x = Temp, y = value, fill=Temp))+
geom_bar(stat = "identity", position="dodge")+
facet_wrap(~ variable, ncol = 3,scales = "free")+
theme_kp()
EZ = read.csv("Data/Enzyme.csv")
EZ2<- melt(EZ, id.vars=c("ID","Date","Add","Temp"))
EZ2$Temp<- factor(EZ2$Temp, levels= c("-6","-2","2","6","10","4"))
ggplot(EZ2,aes(x = Temp, y = value, fill=Temp))+
geom_bar(stat = "identity", position="dodge")+
facet_wrap(~ variable, ncol = 3,scales = "free")+
theme_kp()
ggplot(EZ2,aes(x = Temp, y = value, fill=Temp))+
geom_point(stat = "identity")+
facet_wrap(~ variable, ncol = 3,scales = "free")+
theme_kp()
ggplot(EZ2,aes(x = Temp, y = value, color=Temp))+
geom_point(stat = "identity")+
facet_wrap(~ variable, ncol = 3,scales = "free")+
theme_kp()
ggplot(EZ2,aes(x = Temp, y = value, color=Temp))+
geom_point(stat = "identity")+
geom_errorbar(aes(ymin=len-sd, ymax=len+sd), width=.2)
EZERROR = EZ2 %>%
group_by(ID,Temp, variable) %>%
summarize(mean_value = mean(value, na.rm = TRUE),
se = sqrt(var(value, na.rm = TRUE) / sum(!is.na(value)))) %>%
ungroup()
library(tidyverse)
EZERROR = EZ2 %>%
group_by(ID,Temp, variable) %>%
summarize(mean_value = mean(value, na.rm = TRUE),
se = sqrt(var(value, na.rm = TRUE) / sum(!is.na(value)))) %>%
ungroup()
View(EZERROR)
EZERROR = EZ2 %>%
group_by(Temp, variable) %>%
summarize(mean_value = mean(value, na.rm = TRUE),
se = sqrt(var(value, na.rm = TRUE) / sum(!is.na(value)))) %>%
ungroup()
ggplot(EZERROR,aes(x = Temp, y = value, color=Temp))+
geom_point(stat = "identity")+
geom_errorbar(aes(ymin = mean_value - se, ymax = mean_value + se), lwd = 1, width = 1)+
facet_wrap(~ variable, ncol = 3,scales = "free")+
theme_kp()
View(EZERROR)
ggplot(EZERROR,aes(x = Temp, y = mean_value, color=Temp))+
geom_point(stat = "identity")+
geom_errorbar(aes(ymin = mean_value - se, ymax = mean_value + se), lwd = 1, width = 1)+
facet_wrap(~ variable, ncol = 3,scales = "free")+
theme_kp()
ggplot(EZERROR,aes(x = Temp, y = mean_value, color=Temp))+
geom_bar(stat = "identity")+
geom_errorbar(aes(ymin = mean_value - se, ymax = mean_value + se), lwd = 1, width = 1, color="black")+
facet_wrap(~ variable, ncol = 3,scales = "free")+
theme_kp()
ggplot(EZERROR,aes(x = Temp, y = mean_value, fill=Temp))+
geom_bar(stat = "identity")+
geom_errorbar(aes(ymin = mean_value - se, ymax = mean_value + se), lwd = 1, width = 1, color="black")+
facet_wrap(~ variable, ncol = 3,scales = "free")+
theme_kp()
EZ = read.csv("Data/Enzyme.csv")
EZ2<- melt(EZ, id.vars=c("ID","Date","Add","Temp"))
library(reshape2)
library(ggplot2)
EZ2<- melt(EZ, id.vars=c("ID","Date","Add","Temp"))
EZ2$Temp<- factor(EZ2$Temp, levels= c("-6","-2","2","6","10","4"))
EZERROR = EZ2 %>%
group_by(Temp, variable) %>%
summarize(mean_value = mean(value, na.rm = TRUE),
se = sqrt(var(value, na.rm = TRUE) / sum(!is.na(value)))) %>%
ungroup()
library(tidyverse)
EZERROR = EZ2 %>%
group_by(Temp, variable) %>%
summarize(mean_value = mean(value, na.rm = TRUE),
se = sqrt(var(value, na.rm = TRUE) / sum(!is.na(value)))) %>%
ungroup()
ggplot(EZERROR,aes(x = Temp, y = mean_value, fill=Temp))+
geom_bar(stat = "identity")+
geom_errorbar(aes(ymin = mean_value - se, ymax = mean_value + se), lwd = 1, width = 1, color="black")+
facet_wrap(~ variable, ncol = 3,scales = "free")+
scale_fill_manual(values=cbPalette)+
theme_kp()
# custom ggplot theme
cbPalette <- c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7")
ggplot(EZERROR,aes(x = Temp, y = mean_value, fill=Temp))+
geom_bar(stat = "identity")+
geom_errorbar(aes(ymin = mean_value - se, ymax = mean_value + se), lwd = 1, width = 1, color="black")+
facet_wrap(~ variable, ncol = 3,scales = "free")+
scale_fill_manual(values=cbPalette)+
theme_kp()
theme_kp <- function() {  # this for all the elements common across plots
theme_bw() %+replace%
theme(legend.position = "top",
legend.key=element_blank(),
legend.title = element_blank(),
legend.text = element_text(size = 12),
legend.key.size = unit(1.5, 'lines'),
legend.background = element_rect(colour = NA),
panel.border = element_rect(color="black",size=1.5, fill = NA),
plot.title = element_text(hjust = 0, size = 14),
axis.text = element_text(size = 14, color = "black"),
axis.title = element_text(size = 14, face = "bold", color = "black"),
# formatting for facets
panel.background = element_blank(),
strip.background = element_rect(colour="white", fill="white"), #facet formatting
panel.spacing.x = unit(1.5, "lines"), #facet spacing for x axis
panel.spacing.y = unit(1.5, "lines"), #facet spacing for x axis
strip.text.x = element_text(size=12, face="bold"), #facet labels
strip.text.y = element_text(size=12, face="bold", angle = 270) #facet labels
)
}
ggplot(EZERROR,aes(x = Temp, y = mean_value, fill=Temp))+
geom_bar(stat = "identity")+
geom_errorbar(aes(ymin = mean_value - se, ymax = mean_value + se), lwd = 1, width = 1, color="black")+
facet_wrap(~ variable, ncol = 3,scales = "free")+
scale_fill_manual(values=cbPalette)+
theme_kp()
ggsave("Graphs/Cellulose_Enzymes.png", device= "png")
